[code]
#include <LiquidCrystal.h>
#include <Keypad.h>
#include <TimeLib.h>
#include <Wire.h>
#include <DS3231.h>

DS3231 clock;
RTCDateTime dt;

#define buzzer 8
#define trigPin 9
#define echoPin 10
#define button1 50
#define button2 51

int backlight_pin10 = 44;
int brightness = 128;

int lastButtonState = LOW;
long duration;
int initialDistance, currentDistance, distance, i;

int lockScreen = 0;
String password = "1598";
String code = "3231";
String tempPassword;
String tempCode;
bool activated = false;
bool activateAlarm = false;
bool alarmActivated = false;           /// initialize a few different constants and variables
bool enteredPassword;                  
bool passChangeMode = false;
bool passChanged = false;

int WhichScreen = 1;
int cursorPosition = 0;

char keyPressed;
const byte ROWS = 4;
const byte COLS = 4;
char keyMap[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {28, 30, 32, 34};
byte colPins[COLS] = {36, 38, 40, 42};
Keypad myKeypad = Keypad( makeKeymap(keyMap), rowPins, colPins, ROWS, COLS);
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

byte bell_symbol[8] =
{
  B00100,
  B01110,
  B01110,
  B01110,
  B01110,
  B11111,
  B00000,
  B00100
};

byte up_arrow[8] =
{
  B00100,
  B01110,
  B11111,
  B00100,
  B00100,
  B00100,
  B00100,
  B00100
};

byte down_arrow[8] =
{
  B00100,
  B00100,
  B00100,
  B00100,
  B00100,
  B11111,
  B01110,
  B00100
};

byte pBar[8] = {
  B11111,
  B11111,
  B11111,
  B11111,
  B11111,
  B11111,
  B11111,
};

void setup() {

  lcd.begin(16, 2);
  pinMode(8, OUTPUT);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(backlight_pin10, OUTPUT);
  pinMode(50, INPUT_PULLUP);
  pinMode(51, INPUT_PULLUP);
  clock.setDateTime(__DATE__, __TIME__);      /// void set up. codes here only run once on startup
  clock.begin();
  lcd.print("Initialize Alarm");                      
  delay(1000);
  lcd.clear();
  lcd.createChar(0, bell_symbol);
  lcd.createChar(1, up_arrow);
  lcd.createChar(2, down_arrow);
  lcd.createChar(3, pBar);
}

void loop()
{
  analogWrite(backlight_pin10, brightness);

  if (!alarmActivated)
  {
    screenEvent();
  }

  if (activateAlarm)
  {
    alarmEvent();
  }

  ////***** UltraSonice Sensor Entry/Exit Zones *****\\\\

  if (alarmActivated == true)
  {
    doorZone();
    kitchenZone();
    livingRoom();
  }

  ///////***** Keypad Events *****\\\\\\\\\

  keyPressed = myKeypad.getKey();
  {
    if (keyPressed == 'A')
    {
      lockScreen = 1;
      tone(buzzer, 2000, 100);
    }
    if (keyPressed == 'B')
    {
      lockScreen = 0;
      tone(buzzer, 2000, 100);
    }

    if (keyPressed == '8')
    {
      if (lockScreen == 1)
      {
        if (WhichScreen > 1 && WhichScreen < 6)
        {
          lcd.clear();
          tone(buzzer, 4000, 100);
          WhichScreen--;
          delay(10);
        }
      }
    }

    if (keyPressed == '2')
    {
      if (lockScreen == 1)
      {
        if (WhichScreen > 0 && WhichScreen < 5)
        {
          lcd.clear();
          tone(buzzer, 5000, 100);
          WhichScreen++;
          delay(10);
        }
      }
    }

    if (brightness == 256)
    {
      brightness = 0;
    }

    if (WhichScreen == 2)
    {
      if (keyPressed == '6')
      {
        brightness = brightness += 10;
      }
    }

    if (WhichScreen == 2)
    {
      if (keyPressed == '4')
      {
        brightness = brightness -= 10;
      }
    }

    if ((WhichScreen == 5) && (!alarmActivated))
    {
      if (keyPressed == '*')
      {
        activateAlarm = true;
        tone(buzzer, 1000, 200);
      }
    }

    if (WhichScreen == 4)
    {
      if (keyPressed == '*')
      {
        passChange();
      }
    }

    if (alarmActivated == true)
    {
      if (keyPressed == 'D')
      {
        deactivate();
        lockScreen = 1;
      }
    }

  }
}

long checkDistance()
{
  //int i=10;

  //while( i<=10 ) {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2;
  //sumDistance += distance;
  //}
  //int averageDistance= sumDistance/10;
  return distance;
}

void deactivate()
{
  int count = 0;
  int k = 5;
  tempCode = "";
  activated = true;
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(" *Deactivate* ");
  delay(1000);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(" *Enter Code* ");
  lcd.setCursor(0, 1);
  lcd.print("Code>");
  while (activated) {
    keyPressed = myKeypad.getKey();
    if (keyPressed != NO_KEY) {
      if (keyPressed == '0' || keyPressed == '1' || keyPressed == '2' || keyPressed == '3' ||
          keyPressed == '4' || keyPressed == '5' || keyPressed == '6' || keyPressed == '7' ||
          keyPressed == '8' || keyPressed == '9' ) {
        tempCode += keyPressed;
        tone(buzzer, 1000, 100);
        lcd.setCursor(k, 1);
        lcd.print("*");
        k++;
      }
    }
    if (k > 9 || keyPressed == '#') {
      tempCode = "";
      k = 5;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print(" *Enter Code* ");
      lcd.setCursor(0, 1);
      lcd.print("Code>");
    }

    if ( keyPressed == '*') {
      if ( tempCode == code)
      {
        activated = false;
        alarmActivated = false;
        tone(buzzer, 1000, 100);
        lcd.clear();
        lockScreen = 1;
      }
      else if (tempCode != code)
      {
        lcd.setCursor(0, 1);
        lcd.print("Wrong PassCode!!");
        delay(2000);
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print(" *Enter Code* ");
        lcd.setCursor(0, 1);
        lcd.print("Code>");
        count++;
      }

      if (count == 3)
      {
        lcd.clear();
        lcd.setCursor(0, 1);
        lcd.print("INTRUDER ALERT!! ");
        delay(2000);
        lcd.clear();
        tone(8, 10000);
        enterPassword();
      }
    }
  }
}

void passChange()
{
  lcd.clear();
  int i = 1;
  tone(buzzer, 2000, 100);
  tempPassword = "";
  lcd.setCursor(0, 0);
  lcd.print("Current Password");
  lcd.setCursor(0, 1);
  lcd.print(">");
  passChangeMode = true;
  passChanged = true;
  while (passChanged) {
    keyPressed = myKeypad.getKey();
    if (keyPressed != NO_KEY) {
      if (keyPressed == '0' || keyPressed == '1' || keyPressed == '2' || keyPressed == '3' ||
          keyPressed == '4' || keyPressed == '5' || keyPressed == '6' || keyPressed == '7' ||
          keyPressed == '8' || keyPressed == '9' ) {
        tempPassword += keyPressed;
        lcd.setCursor(i, 1);
        lcd.print("*");
        i++;
        tone(8, 8000, 100);
      }
    }
    if (i > 5 || keyPressed == '#') {
      tempPassword = "";
      i = 1;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Current Password");
      lcd.setCursor(0, 1);
      lcd.print(">");
    }

    if ( keyPressed == '*') {
      i = 1;
      tone(buzzer, 2000, 100);
      if (password == tempPassword) {
        tempPassword = "";
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Set New Password");
        lcd.setCursor(0, 1);
        lcd.print(">");
        while (passChangeMode)
        {
          keyPressed = myKeypad.getKey();
          if (keyPressed != NO_KEY) {
            if (keyPressed == '0' || keyPressed == '1' || keyPressed == '2' || keyPressed == '3' ||
                keyPressed == '4' || keyPressed == '5' || keyPressed == '6' || keyPressed == '7' ||
                keyPressed == '8' || keyPressed == '9' ) {
              tempPassword += keyPressed;
              lcd.setCursor(i, 1);
              lcd.print("*");
              i++;
              tone(8, 2000, 100);
            }
          }
          if (i > 5 || keyPressed == '#')
          {
            tempPassword = "";
            i = 1;
            tone(buzzer, 2000, 100);
            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Set New Password");
            lcd.setCursor(0, 1);
            lcd.print(">");
          }
          if ( i == 5 && keyPressed == '*')
          {
            i = 1;
            tone(buzzer, 2000, 100);
            password = tempPassword;
            passChangeMode = false;
            passChanged = false;
            lcd.clear();
            lockScreen = 1;
          }
        }
      }
    }
  }
}

void enterPassword()
{
  int k = 5;
  tempPassword = "";
  activated = true;
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(" *** ALARM *** ");
  lcd.setCursor(0, 1);
  lcd.print("Pass>");
  while (activated) {
    keyPressed = myKeypad.getKey();
    if (keyPressed != NO_KEY) {
      if (keyPressed == '0' || keyPressed == '1' || keyPressed == '2' || keyPressed == '3' ||
          keyPressed == '4' || keyPressed == '5' || keyPressed == '6' || keyPressed == '7' ||
          keyPressed == '8' || keyPressed == '9' ) {
        tempPassword += keyPressed;
        tone(buzzer, 1000, 100);
        lcd.setCursor(k, 1);
        lcd.print("*");
        k++;
      }
    }
    if (k > 9 || keyPressed == '#') {
      tempPassword = "";
      tone(buzzer, 1000, 100);
      k = 5;
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print(" *** ALARM *** ");
      lcd.setCursor(0, 1);
      lcd.print("Pass>");
    }

    if ( keyPressed == '*') {
      if ( tempPassword == password ) {
        activated = false;
        alarmActivated = false;
        lcd.clear();
        lockScreen = 1;
      }
      else if (tempPassword != password) {
        lcd.setCursor(0, 1);
        lcd.print("Wrong Password!!!");
        delay(2000);
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print(" *** ALARM *** ");
        lcd.setCursor(0, 1);
        lcd.print("Pass>");
      }
    }
  }
}

void date_time()
{
  dt = clock.getDateTime();

  lcd.setCursor(15, 1);
  lcd.write((byte) 0);

  if (dt.hour == 00)
  {
    lcd.setCursor(9, 0);
    lcd.print(" AM"); lcd.print(" ");
    lcd.setCursor(0, 0);
    dt.hour = 12;
  }  else {
    lcd.setCursor(9, 0);
    lcd.print(" AM");
    lcd.setCursor(0, 0);
  }

  if (dt.hour >= 24)
  {
    lcd.setCursor(9, 0);
    lcd.print(" PM"); lcd.print(" ");
    lcd.setCursor(0, 0);
    dt.hour = dt.hour - 12;
    
  } 
  else{ 
   lcd.setCursor(9, 0);
   lcd.print(" PM");
  }

  if (dt.hour < 10)
  {
    lcd.setCursor(0, 0);
    lcd.print("0");
    lcd.print(dt.hour);   lcd.print(":");
  }
  else
  {
    lcd.setCursor(0, 0);
    lcd.print(dt.hour);   lcd.print(":");
  }

  if (dt.minute < 10)
  {
    lcd.setCursor(3, 0);
    lcd.print ("0");
    lcd.print(dt.minute); lcd.print(":");
  }
  else
  {
    lcd.setCursor(3, 0);
    lcd.print(dt.minute); lcd.print(":");
  }

  if (dt.second < 10)
  {
    lcd.setCursor(6, 0);
    lcd.print ("0");
    lcd.print(dt.second); lcd.print(" ");
  }
  else
  {
    lcd.setCursor(6, 0);
    lcd.print(dt.second); lcd.print(" ");
  }

  if (dt.day < 10)
  {
    lcd.setCursor(0, 1);
    lcd.print("0");
    lcd.print(dt.day); lcd.print(" ");
  }
  else
  {
    lcd.setCursor(0, 1);
    lcd.print(dt.day);  lcd.print(" ");
  }
  switch (dt.month)
  {
    case 1: lcd.print("January ");
      break;
    case 2: lcd.print("February ");
      break;
    case 3: lcd.print("March ");
      break;
    case 4: lcd.print("April ");
      break;
    case 5: lcd.print("May ");
      break;
    case 6: lcd.print("June ");
      break;
    case 7: lcd.print("July ");
      break;
    case 8: lcd.print("August ");
      break;
    case 9: lcd.print("September ");
      break;
    case 10: lcd.print("October ");
      break;
    case 11: lcd.print("November ");
      break;
    case 12: lcd.print("December ");
      break;
    default: lcd.print("Err ");
      break;

      lcd.setCursor(1, 3);
      lcd.print(dt.month); lcd.print(" ");
  }
  lcd.print(dt.year); lcd.print(" ");
}

void screenEvent()
{
  switch (WhichScreen)
  {
    case 1:
      {
        firstScreen();
      }
      break;

    case 2:
      {
        secondScreen();
      }
      break;

    case 3:
      {
        thirdScreen();
      }
      break;

    case 4:
      {
        fourthScreen();
      }
      break;

    case 5:
      {
        fifthScreen();
      }
      break;

    case 0:
      {

      }
      break;
  }
}


void firstScreen()
{
  date_time();
}

void secondScreen()
{
  lcd.setCursor(0, 0); 
  lcd.print("MENU:");
  lcd.setCursor(0, 1);
  lcd.print(">Brightness");
  lcd.setCursor(14, 1);
  lcd.write((byte) 1);
  lcd.setCursor(15, 1);
  lcd.write((byte) 2);
}
void thirdScreen()
{
  lcd.setCursor(0, 0); 
  lcd.print("MENU: ");
  lcd.setCursor(0, 1);
  lcd.print(">Time/Date");
  lcd.setCursor(14, 1);
  lcd.write((byte) 1);
  lcd.setCursor(15, 1);
  lcd.write((byte) 2);
}
void fourthScreen()
{
  lcd.setCursor(0, 0); 
  lcd.print("MENU: ");
  lcd.setCursor(0, 1);
  lcd.print(">Change Pass");
  lcd.setCursor(14, 1);
  lcd.write((byte) 1);
  lcd.setCursor(15, 1);
  lcd.write((byte) 2);
}
void fifthScreen()
{
  lcd.setCursor(0, 0); 
  lcd.print("MENU: ");
  lcd.setCursor(0, 1);
  lcd.print(">Set Alarm");
  lcd.setCursor(14, 1);
  lcd.write((byte) 1);
  lcd.setCursor(15, 1);
  lcd.write((byte) 2);
}

void alarmEvent()
{
  enterPassword();
  initialDistance = checkDistance();
  int countdown = 5;
  while (countdown != 0)
  {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Alarm will be");
    lcd.setCursor(0, 1);
    lcd.print("activated in");
    lcd.setCursor(13, 1);
    lcd.print(countdown);
    countdown--;
    tone(8, 700, 100);
    delay(1000);
    if (countdown == 0) {
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Alarm Has Been Activated!");
      lcd.setCursor(0, 1);
      lcd.print("Press D to De-Activate!!");
      activateAlarm = false;
      alarmActivated = true;
      //scroll();
    }
  }
}
void doorZone()
{
  currentDistance = checkDistance() + 10;
  
  if (initialDistance > currentDistance)
  {
    delay(3000);
    lcd.clear();
    lcd.setCursor(1, 0);
    lcd.print("Intruder Alert!!");
    lcd.setCursor(0, 1);
    lcd.print("Zone: Front Door!!!");
    //scroll();
    delay(5000);
    tone(8, 1000);
    enterPassword();
    lockScreen = 1;
  }
}

void kitchenZone()
{
  int zone1 = digitalRead(50);

  if (zone1 != lastButtonState)
  {
    if (zone1 == HIGH)
    {
      activateAlarm = false;
      activated = true;
    }
    else
    {
      delay(3000);
      lcd.clear();
      lcd.setCursor(1, 0);
      lcd.print("Intruder Alert!!");
      lcd.setCursor(0, 1);
      lcd.print("Zone: Kitchen!!!");
      delay(5000);
      tone(8, 1000);
      enterPassword();
      lockScreen = 1;
    }
    delay(100);
  }
  lastButtonState = zone1;
}

void livingRoom()
{
  int zone2 = digitalRead(51);

  if (zone2 != lastButtonState)
  {
    if (zone2 == HIGH)
    {
      activateAlarm = false;
      activated = true;
    }
    else
    {
      delay(3000);
      lcd.clear();
      lcd.setCursor(1, 0);
      lcd.print("Intruder Alert!!");
      lcd.setCursor(0, 1);
      lcd.print("Zone: Living Room!!");
      delay(5000);
      tone(8, 1000);
      enterPassword();
      lockScreen = 1;
    }
    delay(100);
  }
  lastButtonState = zone2;
}

void scroll()
{
  for (int positionCounter = 0; positionCounter < 10; positionCounter++) {
    lcd.scrollDisplayLeft();
    delay(500);
  }
  for (int positionCounter = 0; positionCounter < 21; positionCounter++) {
    lcd.scrollDisplayRight();
    delay(500);
  }
  for (int positionCounter = 0; positionCounter < 12; positionCounter++) {
    lcd.scrollDisplayLeft();
    delay(500);
  }
  delay(1000);
}
[/code]
